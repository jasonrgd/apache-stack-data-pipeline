services:

  # ------------------ Infrastructure ------------------
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: druid
      POSTGRES_USER: druid
      POSTGRES_DB: druid
    ports:
      - "5432:5432"

  # ------------------ Debezium Connect ------------------
  connect:
    image: debezium/connect:2.4
    depends_on:
      - kafka
      - postgres
    ports:
      - "8084:8083" # Avoid conflict with druid-historical
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_connect_config
      OFFSET_STORAGE_TOPIC: debezium_connect_offset
      STATUS_STORAGE_TOPIC: debezium_connect_status
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: connect

  # ------------------ Apache Druid Stack ------------------
  druid-coordinator:
    image: apache/druid:26.0.0
    depends_on:
      - postgres
    environment:
      - druid.zk.service.host=zookeeper:2181
      - druid.metadata.storage.type=postgresql
      - druid.metadata.storage.connector.connectURI=jdbc:postgresql://postgres:5432/druid
      - druid.metadata.storage.connector.user=druid
      - druid.metadata.storage.connector.password=druid
      - druid.storage.type=local
      - druid.storage.storageDirectory=/var/druid/deepstorage
    ports:
      - "8081:8081"
    volumes:
      - ./druid/deepstorage:/var/druid/deepstorage

  druid-overlord:
    image: apache/druid:26.0.0
    depends_on:
      - druid-coordinator
    environment:
      - druid.zk.service.host=zookeeper:2181
      - druid.metadata.storage.type=postgresql
      - druid.metadata.storage.connector.connectURI=jdbc:postgresql://postgres:5432/druid
      - druid.metadata.storage.connector.user=druid
      - druid.metadata.storage.connector.password=druid
      - druid.storage.type=local
      - druid.storage.storageDirectory=/var/druid/deepstorage
    ports:
      - "8090:8090"
    volumes:
      - ./druid/deepstorage:/var/druid/deepstorage

  druid-broker:
    image: apache/druid:26.0.0
    depends_on:
      - druid-coordinator
    environment:
      - druid.zk.service.host=zookeeper:2181
      - druid.metadata.storage.type=postgresql
      - druid.metadata.storage.connector.connectURI=jdbc:postgresql://postgres:5432/druid
      - druid.metadata.storage.connector.user=druid
      - druid.metadata.storage.connector.password=druid
      - druid.storage.type=local
      - druid.storage.storageDirectory=/var/druid/deepstorage
    ports:
      - "8082:8082"
    volumes:
      - ./druid/deepstorage:/var/druid/deepstorage

  druid-historical:
    image: apache/druid:26.0.0
    depends_on:
      - druid-coordinator
    environment:
      - druid.zk.service.host=zookeeper:2181
      - druid.metadata.storage.type=postgresql
      - druid.metadata.storage.connector.connectURI=jdbc:postgresql://postgres:5432/druid
      - druid.metadata.storage.connector.user=druid
      - druid.metadata.storage.connector.password=druid
      - druid.storage.type=local
      - druid.storage.storageDirectory=/var/druid/deepstorage
    ports:
      - "8083:8083"
    volumes:
      - ./druid/deepstorage:/var/druid/deepstorage

  druid-router:
    image: apache/druid:26.0.0
    depends_on:
      - druid-broker
      - druid-historical
    environment:
      - druid.zk.service.host=zookeeper:2181
      - druid.metadata.storage.type=postgresql
      - druid.metadata.storage.connector.connectURI=jdbc:postgresql://postgres:5432/druid
      - druid.metadata.storage.connector.user=druid
      - druid.metadata.storage.connector.password=druid
      - druid.storage.type=local
      - druid.storage.storageDirectory=/var/druid/deepstorage
      - druid.router.enableCors=true
      - druid.router.allowedOrigins=*
    ports:
      - "8888:8888"
    volumes:
      - ./druid/deepstorage:/var/druid/deepstorage

  # ------------------ Kafka UI ------------------
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092

  # ------------------ Frontend Vue App ------------------
  vue-frontend:
    build:
      context: ./frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=development
    command: ["npm", "run", "dev"]
    depends_on:
      - druid-router
